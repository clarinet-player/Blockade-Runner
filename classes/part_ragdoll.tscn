[gd_scene load_steps=2 format=3 uid="uid://li5tq0wgokht"]

[sub_resource type="GDScript" id="GDScript_jjqfi"]
script/source = "extends Node3D


var velocity := Vector3.ZERO
var angular := Vector3.ZERO

var color_scheme : Array


func take_part(part : Node3D):
	color_scheme = part.get_parent().color_scheme
	velocity = (part.global_position - part.get_parent().global_position) + part.get_parent().velocity + Vector3(randf_range(-1, 1), randf_range(-1, 1), randf_range(-1, 1))
	angular = Vector3(randf_range(-0.005, 0.005), randf_range(-0.005, 0.005), randf_range(-0.005, 0.005))
	
	GameManager.add_child(self)
	global_position = part.global_position
	part.reparent(self)


func _physics_process(delta):
	if global_position.distance_to(Ship.global_position) > 250:
		queue_free()
		return
	global_translate(velocity * delta)
	global_rotate(angular.normalized(), angular.length())


func damage(_amount, _part, knockback := Vector3.ZERO, sfx := \"\"):
	velocity += knockback
	if get_child(0) is StaticBody3D:
		get_child(0).destroy()
	
	if !sfx.is_empty():
		var audio = load(\"res://classes/audio_player.tscn\").instantiate()
		audio.start(self, sfx)
	else:
		var audio = load(\"res://classes/audio_player.tscn\").instantiate()
		audio.start(self, \"res://fx/hit.mp3\")
	
	await get_tree().create_timer(5).timeout
	queue_free()
"

[node name="PartRagdoll" type="Node3D" groups=["Ragdolls"]]
script = SubResource("GDScript_jjqfi")
