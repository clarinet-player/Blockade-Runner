[gd_scene load_steps=6 format=3 uid="uid://coudcqs1vosss"]

[ext_resource type="Theme" uid="uid://6ftdqmtb2drx" path="res://assets/theme2.tres" id="1_db0x0"]
[ext_resource type="Texture2D" uid="uid://c2ocxf05oge1a" path="res://assets/wasd.png" id="2_tphs6"]
[ext_resource type="Texture2D" uid="uid://cp7dy13g8hbo8" path="res://assets/Mouse_Left_Key_Light.png" id="3_hghau"]

[sub_resource type="GDScript" id="GDScript_7sqc8"]
script/source = "extends Node



enum states {
	menu,
	combat,
	paused,
	editor,
	planet
}
var game_state := states.menu



var file_number := -1
var location := \"\"
var planet_seed := 0
var autosaved_ship := {}
var quests := []
var parts := {}

var ships
var planet_data
var part_data

 

func start_combat(level := \"\"):
	if level.is_empty():
		level = location
	get_tree().change_scene_to_file(planet_data[level].combat)
	
	Ship.calculate_stats()
	Ship.reset()
	game_state = states.combat
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED



func start_planet(save := true, planet := \"\", new_seed := false, load_ship := false):
	if new_seed:
		planet_seed = randi()
	
	if !planet.is_empty():
		location = planet
	get_tree().change_scene_to_file(planet_data[location].planet)
	
	game_state = states.planet
	Input.mouse_mode = Input.MOUSE_MODE_VISIBLE
	for child in get_children():
		child.queue_free()
	
	var completed = []
	for quest in quests:
		if quest.destination == location:
			completed.append(quest)
	for quest in completed:
		for part in quest.parts:
			if parts.has(part):
				parts[part] += 1
			else:
				parts[part] = 1
		quests.erase(quest)
	
	if load_ship:
		Ship.load_data(autosaved_ship, \"Untitled Ship\")
	Ship.calculate_stats()
	
	if save:
		save_game()



func start_editor():
	get_tree().change_scene_to_file(\"res://menus/ship_editor.tscn\")
	game_state = states.editor
	Input.mouse_mode = Input.MOUSE_MODE_VISIBLE
	Ship.reset()



func start_map():
	get_tree().change_scene_to_file(\"res://menus/map.tscn\")
	
	game_state = states.planet
	Input.mouse_mode = Input.MOUSE_MODE_VISIBLE
	for child in get_children():
		child.queue_free()



func new_game():
	file_number = -1
	location = \"Eden\"
	autosaved_ship = read_file(\"res://assets/default_ship.json\")
	quests = []
	parts = {\"Block\": 6, \"Slab Engine\": 4, \"Fuel Tank\": 2, \"Cargo\": 4, \"Engine\": 4, \"Gun\": 2}
	
	ships = read_file(\"user://ship_saves.json\")
	if ships == null:
		ships = Array()
	
	planet_data = GameManager.read_file(\"res://levels/planet_data.json\")
	part_data = GameManager.read_file(\"res://parts/part_data.json\")
	
	Ship.load_data(autosaved_ship, \"Untitled Ship\")
	start_combat()
	$\"tutorial prompts\".start()



func load_game(file : int):
	if file == -1:
		new_game()
		return
	var data : Dictionary = read_file(\"user://game_data.json\")[file]
	ships = read_file(\"user://ship_saves.json\")
	if ships == null:
		ships = Array()
	
	planet_data = GameManager.read_file(\"res://levels/planet_data.json\")
	part_data = GameManager.read_file(\"res://parts/part_data.json\")
	
	file_number = file
	
	if data.has(\"Location\"): location = data[\"Location\"]
	else: location = \"Eden\"
	
	if data.has(\"Autosaved Ship\"): autosaved_ship = data[\"Autosaved Ship\"]
	else: autosaved_ship = read_file(\"res://assets/default_ship.json\")
	
	if data.has(\"Quests\"): quests = data[\"Quests\"]
	else: quests = []
	
	if data.has(\"Parts\"): parts = data[\"Parts\"]
	else: parts = {}
	
	Ship.load_data(autosaved_ship, \"Untitled Ship\")
	start_planet(false)



func save_game():
	autosaved_ship = Ship.save_data()
	
	var data = read_file(\"user://game_data.json\")
	if file_number == -1:
		file_number = data.size()
		data.append({
		\"Location\": location,
		\"Autosaved Ship\": autosaved_ship,
		\"Quests\": quests,
		\"Parts\": parts
		})
	else:
		data[file_number] = {
			\"Location\": location,
			\"Autosaved Ship\": autosaved_ship,
			\"Quests\": quests,
			\"Parts\": parts
		}
	write_file(\"user://game_data.json\", data)



func read_file(filename : String):
	if not FileAccess.file_exists(filename):
		return null
	
	var file = FileAccess.open(filename, FileAccess.READ)
	var string = file.get_as_text()
	var json = JSON.new()
	file.close()
	
	if json.parse(string) != OK:
		return null
	
	return json.get_data()



func write_file(filename : String, data):
	var file = FileAccess.open(filename, FileAccess.WRITE)
	file.store_line(JSON.stringify(data))
	file.close()
"

[sub_resource type="GDScript" id="GDScript_0cmpd"]
script/source = "extends VBoxContainer



var w := false
var a := false
var s := false
var d := false
var shift := false
var ctrl := false
var shoot := false



func start():
	$\"move prompt\".show()
	
	w = false
	a = false
	s = false
	d = false
	shift = false
	ctrl = false
	
	while !w or !a or !s or !d or !shift or !ctrl:
		if Input.is_action_just_pressed(\"Forward\"): w = true
		if Input.is_action_just_pressed(\"Back\"): s = true
		if Input.is_action_just_pressed(\"Left\"): a = true
		if Input.is_action_just_pressed(\"Right\"): d = true
		if Input.is_action_just_pressed(\"Down\"): ctrl = true
		if Input.is_action_just_pressed(\"Up\"): shift = true
		
		await get_tree().process_frame
	
	$\"move prompt\".hide()
	$\"shoot prompt\".show()
	
	shoot = false
	
	while !shoot:
		if Input.is_action_just_pressed(\"Shoot Primary\"): shoot = true
		await get_tree().process_frame
	
	$\"shoot prompt\".hide()
"

[node name="GameManager" type="Node"]
script = SubResource("GDScript_7sqc8")

[node name="tutorial prompts" type="VBoxContainer" parent="."]
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -100.0
offset_top = -507.0
offset_right = 100.0
offset_bottom = -393.0
grow_horizontal = 2
grow_vertical = 0
script = SubResource("GDScript_0cmpd")

[node name="move prompt" type="VBoxContainer" parent="tutorial prompts"]
visible = false
layout_mode = 2

[node name="Label" type="Label" parent="tutorial prompts/move prompt"]
layout_mode = 2
theme = ExtResource("1_db0x0")
text = "Move"
horizontal_alignment = 1

[node name="TextureRect" type="TextureRect" parent="tutorial prompts/move prompt"]
custom_minimum_size = Vector2(200, 75)
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4
texture = ExtResource("2_tphs6")
expand_mode = 1

[node name="shoot prompt" type="VBoxContainer" parent="tutorial prompts"]
visible = false
layout_mode = 2

[node name="Label" type="Label" parent="tutorial prompts/shoot prompt"]
layout_mode = 2
theme = ExtResource("1_db0x0")
text = "Shoot
"
horizontal_alignment = 1

[node name="TextureRect" type="TextureRect" parent="tutorial prompts/shoot prompt"]
custom_minimum_size = Vector2(50, 50)
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4
texture = ExtResource("3_hghau")
expand_mode = 1
