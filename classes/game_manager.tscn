[gd_scene load_steps=2 format=3 uid="uid://coudcqs1vosss"]

[sub_resource type="GDScript" id="GDScript_7sqc8"]
script/source = "extends Node



enum states {
	menu,
	combat,
	paused,
	editor,
	planet
}
var game_state := states.menu
var tweening_in := false
var tweening_out := false
signal tweening_finished



var file_number : int
var location : String
var autosaved_ship : Dictionary
var quests : Dictionary
var parts : Dictionary
var fuel : float
var credits : float

var ships



func start_combat(level := \"\"):
	if tweening_in or tweening_out:
		return
	
	if level.is_empty():
		level = location
	match level:
		\"Eden\":
			get_tree().change_scene_to_file(\"res://levels/eden_combat.tscn\")
		\"Brand\":
			get_tree().change_scene_to_file(\"res://levels/brand_combat.tscn\")
		\"Icle\":
			get_tree().change_scene_to_file(\"res://levels/icle_combat.tscn\")
		\"Last Chance\":
			get_tree().change_scene_to_file(\"res://levels/last_chance_combat.tscn\")
		\"Tarsis\":
			get_tree().change_scene_to_file(\"res://levels/tarsis_combat.tscn\")
		\"Sarnus\":
			get_tree().change_scene_to_file(\"res://levels/sarnus_combat.tscn\")
		\"Thresh\":
			get_tree().change_scene_to_file(\"res://levels/thresh_combat.tscn\")
	
	Ship.calculate_stats()
	Ship.reset()
	game_state = states.combat
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED



func start_planet(save := true, planet := \"\"):
	if save:
		save_game()
	
	if !planet.is_empty():
		location = planet
	match location:
		\"Eden\":
			get_tree().change_scene_to_file(\"res://levels/eden_planet.tscn\")
		\"Brand\":
			get_tree().change_scene_to_file(\"res://levels/brand_planet.tscn\")
		\"Icle\":
			get_tree().change_scene_to_file(\"res://levels/icle_planet.tscn\")
		\"Last Chance\":
			get_tree().change_scene_to_file(\"res://levels/last_chance_station.tscn\")
		\"Tarsis\":
			get_tree().change_scene_to_file(\"res://levels/tarsis_planet.tscn\")
		\"Sarnus\":
			get_tree().change_scene_to_file(\"res://levels/sarnus_planet.tscn\")
		\"Thresh\":
			get_tree().change_scene_to_file(\"res://levels/thresh_planet.tscn\")
	
	game_state = states.planet
	Input.mouse_mode = Input.MOUSE_MODE_VISIBLE
	for child in get_children():
		child.queue_free()
	Ship.calculate_stats()
	if fuel > Ship.fuel_capacity:
		credits += fuel - Ship.fuel_capacity
		fuel = Ship.fuel_capacity



func start_editor():
	if tweening_in or tweening_out:
		return
	
	get_tree().change_scene_to_file(\"res://ship_editor.tscn\")
	game_state = states.editor
	Input.mouse_mode = Input.MOUSE_MODE_VISIBLE
	Ship.reset()



func start_map():
	get_tree().change_scene_to_file(\"res://map.tscn\")
	
	game_state = states.planet
	Input.mouse_mode = Input.MOUSE_MODE_VISIBLE
	for child in get_children():
		child.queue_free()



func new_game():
	file_number = -1
	location = \"Eden\"
	autosaved_ship = read_file(\"res://assets/default_ship.json\")
	quests = {}
	parts = {}
	fuel = 10.0
	credits = 10
	
	ships = read_file(\"user://ship_saves.json\")
	if ships == null:
		ships = Array()
	
	Ship.load_data(autosaved_ship, \"Untitled Ship\")
	start_combat()



func load_game(file : int):
	if file == -1:
		new_game()
		return
	var data : Dictionary = read_file(\"user://game_data.json\")[file]
	ships = read_file(\"user://ship_saves.json\")
	if ships == null:
		ships = Array()
	
	file_number = file
	
	if data.has(\"Location\"): location = data[\"Location\"]
	else: location = \"Eden\"
	
	if data.has(\"Autosaved Ship\"): autosaved_ship = data[\"Autosaved Ship\"]
	else: autosaved_ship = read_file(\"res://assets/default_ship.json\")
	
	if data.has(\"Quests\"): quests = data[\"Quests\"]
	else: quests = {}
	
	if data.has(\"Parts\"): parts = data[\"Parts\"]
	else: parts = {}
	
	if data.has(\"Fuel\"): fuel = data[\"Fuel\"]
	else: fuel = 10.0
	
	if data.has(\"Credits\"): credits = data[\"Credits\"]
	else: credits = 10
	
	Ship.load_data(autosaved_ship, \"Untitled Ship\")
	start_planet(false)



func save_game():
	autosaved_ship = Ship.save_data()
	
	var data = read_file(\"user://game_data.json\")
	if file_number == -1:
		file_number = data.size()
		data.append({
		\"Location\": location,
		\"Autosaved Ship\": autosaved_ship,
		\"Quests\": quests,
		\"Parts\": parts,
		\"Fuel\": fuel,
		\"Credits\" : credits
		})
	else:
		data[file_number] = {
			\"Location\": location,
			\"Autosaved Ship\": autosaved_ship,
			\"Quests\": quests,
			\"Parts\": parts,
			\"Fuel\": fuel,
			\"Credits\" : credits
		}
	write_file(\"user://game_data.json\", data)



func read_file(filename : String):
	if not FileAccess.file_exists(filename):
		return null
	
	var file = FileAccess.open(filename, FileAccess.READ)
	var string = file.get_line()
	var json = JSON.new()
	file.close()
	
	if json.parse(string) != OK:
		return null
	
	return json.get_data()



func write_file(filename : String, data):
	var file = FileAccess.open(filename, FileAccess.WRITE)
	file.store_line(JSON.stringify(data))
	file.close()
"

[node name="GameManager" type="Node"]
script = SubResource("GDScript_7sqc8")
