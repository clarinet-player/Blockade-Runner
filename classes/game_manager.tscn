[gd_scene load_steps=7 format=3 uid="uid://coudcqs1vosss"]

[ext_resource type="Theme" uid="uid://6ftdqmtb2drx" path="res://assets/theme2.tres" id="1_db0x0"]
[ext_resource type="Texture2D" uid="uid://c2ocxf05oge1a" path="res://assets/wasd.png" id="2_tphs6"]
[ext_resource type="Texture2D" uid="uid://cp7dy13g8hbo8" path="res://assets/Mouse_Left_Key_Light.png" id="3_hghau"]
[ext_resource type="Theme" uid="uid://co8tjlbj1cjyd" path="res://assets/theme.tres" id="4_0g5wq"]

[sub_resource type="GDScript" id="GDScript_7sqc8"]
script/source = "extends Node



enum states {
	menu,
	combat,
	planet,
	map
}
var game_state := states.menu
var paused := false
var input_locked := false


var file_number := -1
var location := \"\"
var difficulty_bonus := 0.0
var drop_luck := 0.0
var autosaved_ship := {}
var quests := []
var parts := {}
var credits := 0
var discovered_planets := []
var completed_quests := []

var collected_pickups := {}

var settings
var ships
var planet_data
var part_data



func _ready():
	settings = read_file(\"user://user_settings.json\")
	if settings == null:
		settings = {\"sensitivity\": 1.0, \"invert_x\": false, \"invert_y\": false}
	
	ships = read_file(\"user://ship_saves.json\")
	if ships == null:
		ships = {}
	
	planet_data = read_file(\"res://levels/planet_data.json\")
	part_data = read_file(\"res://parts/part_data.json\")



func start_menu():
	game_state = states.menu
	get_tree().change_scene_to_file(\"res://menus/main_menu.tscn\")
	$\"Pause Menu\".hide()
	
	for child in get_children():
		if !child is Control:
			child.queue_free()



func start_combat(level := \"\"):
	if level.is_empty():
		level = location
	get_tree().change_scene_to_file(planet_data[level].combat)
	
	Ship.calculate_stats()
	Ship.reset()
	game_state = states.combat
	
	for child in get_children():
		if !child is Control:
			child.queue_free()
	
	input_locked = true
	await get_tree().create_timer(1.0).timeout
	input_locked = false



func start_planet(planet := \"\"):
	if !planet.is_empty():
		location = planet
	
	get_tree().change_scene_to_file(planet_data[location].planet)
	
	for child in get_children():
		if !child is Control:
			child.queue_free()



func start_map():
	get_tree().change_scene_to_file(\"res://menus/map.tscn\")
	
	game_state = states.map
	for child in get_children():
		if !child is Control:
			child.queue_free()



func _input(event):
	if event is InputEventKey and event.keycode == KEY_ESCAPE and event.pressed and game_state != states.menu:
		paused = !paused
		$\"Pause Menu\".visible = paused



func _process(delta):
	if paused:
		Input.mouse_mode = Input.MOUSE_MODE_VISIBLE
	elif game_state == states.combat:
		Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
	else:
		Input.mouse_mode = Input.MOUSE_MODE_VISIBLE



func unpause():
	paused = false
	$\"Pause Menu\".hide()



func new_game():
	file_number = -1
	location = \"Eden\"
	difficulty_bonus = 0
	autosaved_ship = read_file(\"res://assets/default_ship.json\")
	quests = []
	parts = {\"Block\": 6, \"Slab Engine\": 4, \"Fuel Tank\": 2, \"Cargo\": 4, \"Engine\": 4, \"Gun\": 2}
	credits = 10
	discovered_planets = [\"Eden\"]
	completed_quests = []
	
	Ship.load_data(autosaved_ship, \"Default Ship\")
	start_combat()
	$\"tutorial prompts\".start()



func load_game(file : int):
	if file == -1:
		new_game()
		return
	var data : Dictionary = read_file(\"user://game_data.json\")[file]
	file_number = file
	
	if data.has(\"Location\"): location = data[\"Location\"]
	else: location = \"Eden\"
	
	if data.has(\"Difficulty Bonus\"): difficulty_bonus = data[\"Difficulty Bonus\"]
	else: difficulty_bonus = 0
	
	if data.has(\"Autosaved Ship\"): autosaved_ship = data[\"Autosaved Ship\"]
	else: autosaved_ship = read_file(\"res://assets/default_ship.json\")
	
	if data.has(\"Quests\"): quests = data[\"Quests\"]
	else: quests = []
	
	if data.has(\"Parts\"): parts = data[\"Parts\"]
	else: parts = {}
	
	if data.has(\"Credits\"): credits = data[\"Credits\"]
	else: credits = 10
	
	if data.has(\"Discovered Planets\"): discovered_planets = data[\"Discovered Planets\"]
	else: discovered_planets = []
	
	if data.has(\"Completed Quests\"): completed_quests = data[\"Completed Quests\"]
	
	paused = false
	input_locked = false
	
	Ship.load_data(autosaved_ship, \"Autosaved Ship\")
	game_state = states.planet
	start_planet()



func save_game():
	autosaved_ship = Ship.save_data()
	
	var data = read_file(\"user://game_data.json\")
	if file_number == -1:
		file_number = data.size()
		data.append({
		\"Location\": location,
		\"Difficulty Bonus\": difficulty_bonus,
		\"Autosaved Ship\": autosaved_ship,
		\"Quests\": quests,
		\"Parts\": parts,
		\"Credits\": credits,
		\"Discovered Planets\": discovered_planets,
		\"Completed Quests\": completed_quests
		})
	else:
		data[file_number] = {
			\"Location\": location,
			\"Difficulty Bonus\": difficulty_bonus,
			\"Autosaved Ship\": autosaved_ship,
			\"Quests\": quests,
			\"Parts\": parts,
			\"Credits\": credits,
			\"Discovered Planets\": discovered_planets,
			\"Completed Quests\": completed_quests
		}
	write_file(\"user://game_data.json\", data)



func read_file(filename : String):
	if not FileAccess.file_exists(filename):
		return null
	
	var file = FileAccess.open(filename, FileAccess.READ)
	var string = file.get_as_text()
	var json = JSON.new()
	file.close()
	
	if json.parse(string) != OK:
		return null
	
	return json.get_data()



func write_file(filename : String, data):
	var file = FileAccess.open(filename, FileAccess.WRITE)
	file.store_line(JSON.stringify(data))
	file.close()
"

[sub_resource type="GDScript" id="GDScript_0cmpd"]
script/source = "extends VBoxContainer



var w := false
var a := false
var s := false
var d := false
var shift := false
var ctrl := false
var shoot := false



func start():
	$\"move prompt\".show()
	
	w = false
	a = false
	s = false
	d = false
	shift = false
	ctrl = false
	
	while !w or !a or !s or !d or !shift or !ctrl:
		if Input.is_action_just_pressed(\"Forward\"): w = true
		if Input.is_action_just_pressed(\"Back\"): s = true
		if Input.is_action_just_pressed(\"Left\"): a = true
		if Input.is_action_just_pressed(\"Right\"): d = true
		if Input.is_action_just_pressed(\"Down\"): ctrl = true
		if Input.is_action_just_pressed(\"Up\"): shift = true
		
		await get_tree().process_frame
	
	$\"move prompt\".hide()
	$\"shoot prompt\".show()
	
	shoot = false
	
	while !shoot:
		if Input.is_action_just_pressed(\"Shoot Primary\"): shoot = true
		await get_tree().process_frame
	
	$\"shoot prompt\".hide()
"

[node name="GameManager" type="Node"]
script = SubResource("GDScript_7sqc8")

[node name="tutorial prompts" type="VBoxContainer" parent="."]
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -100.0
offset_top = -507.0
offset_right = 100.0
offset_bottom = -393.0
grow_horizontal = 2
grow_vertical = 0
script = SubResource("GDScript_0cmpd")

[node name="move prompt" type="VBoxContainer" parent="tutorial prompts"]
visible = false
layout_mode = 2

[node name="Label" type="Label" parent="tutorial prompts/move prompt"]
layout_mode = 2
theme = ExtResource("1_db0x0")
text = "Move"
horizontal_alignment = 1

[node name="TextureRect" type="TextureRect" parent="tutorial prompts/move prompt"]
custom_minimum_size = Vector2(200, 75)
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4
texture = ExtResource("2_tphs6")
expand_mode = 1

[node name="shoot prompt" type="VBoxContainer" parent="tutorial prompts"]
visible = false
layout_mode = 2

[node name="Label" type="Label" parent="tutorial prompts/shoot prompt"]
layout_mode = 2
theme = ExtResource("1_db0x0")
text = "Shoot
"
horizontal_alignment = 1

[node name="TextureRect" type="TextureRect" parent="tutorial prompts/shoot prompt"]
custom_minimum_size = Vector2(50, 50)
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4
texture = ExtResource("3_hghau")
expand_mode = 1

[node name="Pause Menu" type="Control" parent="."]
visible = false
layout_mode = 3
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
grow_horizontal = 2
grow_vertical = 2

[node name="menu" type="VBoxContainer" parent="Pause Menu"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -344.5
offset_top = -162.5
offset_right = 344.5
offset_bottom = 162.5
grow_horizontal = 2
grow_vertical = 2

[node name="continue" type="Button" parent="Pause Menu/menu"]
layout_mode = 2
theme = ExtResource("4_0g5wq")
theme_override_font_sizes/font_size = 80
text = "Continue
"

[node name="settings" type="Button" parent="Pause Menu/menu"]
visible = false
layout_mode = 2
theme = ExtResource("4_0g5wq")
text = "Settings
"

[node name="exit" type="Button" parent="Pause Menu/menu"]
layout_mode = 2
theme = ExtResource("4_0g5wq")
text = "Exit"

[node name="menu2" type="VBoxContainer" parent="Pause Menu"]
visible = false
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -266.5
offset_top = -162.5
offset_right = 266.5
offset_bottom = 162.5
grow_horizontal = 2
grow_vertical = 2

[node name="Label" type="Label" parent="Pause Menu/menu2"]
layout_mode = 2
theme = ExtResource("1_db0x0")
text = "Mouse Sensitivity: 1.0"
horizontal_alignment = 1

[node name="HSlider" type="HSlider" parent="Pause Menu/menu2"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1

[node name="Label2" type="Label" parent="Pause Menu/menu2"]
layout_mode = 2
theme = ExtResource("1_db0x0")
text = "Invert Mouse"
horizontal_alignment = 1

[node name="HBoxContainer2" type="HBoxContainer" parent="Pause Menu/menu2"]
layout_mode = 2
alignment = 1

[node name="Label2" type="Label" parent="Pause Menu/menu2/HBoxContainer2"]
layout_mode = 2
theme = ExtResource("1_db0x0")
text = "X"

[node name="CheckButton" type="CheckButton" parent="Pause Menu/menu2/HBoxContainer2"]
layout_mode = 2

[node name="Label3" type="Label" parent="Pause Menu/menu2/HBoxContainer2"]
layout_mode = 2
theme = ExtResource("1_db0x0")
text = "Y"

[node name="CheckButton2" type="CheckButton" parent="Pause Menu/menu2/HBoxContainer2"]
layout_mode = 2

[node name="quit" type="Button" parent="Pause Menu/menu2"]
layout_mode = 2
theme = ExtResource("4_0g5wq")
text = "Back"

[connection signal="button_down" from="Pause Menu/menu/continue" to="." method="unpause"]
[connection signal="button_down" from="Pause Menu/menu/exit" to="." method="start_menu"]
